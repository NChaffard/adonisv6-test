{
  "permissions": {
    "allow": [
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "Bash(npm init:*)",
      "Bash(node ace add:*)",
      "Bash(npm install)",
      "Bash(rm:*)",
      "Bash(ls:*)",
      "Bash(mkdir:*)",
      "Bash(npx create-adonisjs:*)",
      "Bash(npm create:*)",
      "Bash(npx create-vue:*)",
      "Bash(node ace make:migration:*)",
      "Bash(node ace.js make:migration:*)",
      "Bash(npm run dev:*)",
      "Bash(mv:*)",
      "Bash(true)",
      "Bash(node:*)",
      "Bash(npm install:*)",
      "Bash(npm uninstall:*)",
      "Bash(npm run build:*)",
      "Bash(npm run typecheck:*)",
      "Bash(find:*)",
      "Bash(npm ls:*)",
      "mcp__ide__getDiagnostics",
      "Bash(npx vue-tsc:*)",
      "Bash(curl:*)",
      "Bash(pkill:*)",
      "Bash(npm run type-check:*)",
      "Bash(touch:*)",
      "Bash(./ace.js test)",
      "Bash(npx japa:*)",
      "Bash(NODE_ENV=test npx japa build/tests/bootstrap.js)",
      "Bash(NODE_ENV=test node -e \"\nconst { configure } = require(''@japa/runner'');\nconst { runTests } = require(''@japa/runner/factories'');\nconst { assert } = require(''@japa/assert'');\nconst { apiClient } = require(''@japa/api-client'');\nconst { pluginAdonisJS } = require(''@japa/plugin-adonisjs'');\nconst { authApiClient } = require(''@adonisjs/auth/plugins/api_client'');\nconst testUtils = require(''@adonisjs/core/services/test_utils'');\nconst app = require(''@adonisjs/core/services/app'');\n\nconst plugins = [\n  assert(),\n  apiClient({ baseURL: ''http://localhost:3333'' }),\n  pluginAdonisJS(app),\n  authApiClient(app),\n];\n\nconst config = configure({\n  plugins,\n  reporters: { activated: [''spec''] },\n  suites: [\n    {\n      name: ''unit'',\n      files: [''./build/tests/unit/**/*.spec.js''],\n      timeout: 2000,\n    },\n    {\n      name: ''functional'',\n      files: [''./build/tests/functional/**/*.spec.js''],\n      timeout: 30000,\n    },\n  ],\n  runnerHooks: {\n    setup: [() => testUtils.db().migrate()],\n    teardown: [() => testUtils.db().truncate()],\n  },\n});\n\nrunTests(config);\n\")",
      "Bash(chmod:*)",
      "Bash(npx tsx:*)",
      "Bash(NODE_ENV=test npx tsx bin/test.ts)",
      "Bash(NODE_ENV=test npx tsx test-simple.js)",
      "Bash(npm test)",
      "Bash(NODE_ENV=test npx tsx run-tests.js)",
      "Bash(NODE_ENV=test npx tsx simple-test-runner.js)",
      "Bash(NODE_ENV=test npx tsx test-runner-basic.js)",
      "Bash(NODE_ENV=test npx tsx run-japa-tests.js)",
      "Bash(NODE_ENV=test npx tsx run-basic-tests.js)",
      "Bash(NODE_ENV=test npx tsx run-full-tests.js)",
      "Bash(NODE_ENV=test npx tsx run-backend-tests.js)",
      "Bash(NODE_ENV=test npx tsx test-backend-working.js)",
      "Bash(NODE_ENV=test npx tsx run-all-backend-tests.js)",
      "Bash(kill:*)",
      "Bash(./test-frontend-api.sh:*)",
      "Bash(sqlite3:*)",
      "Bash(NODE_ENV=development node test-auth-components.js)",
      "Bash(NODE_ENV=development node test-with-app-boot.js)",
      "Bash(cat:*)",
      "Bash(tsx ace migration:status:*)",
      "Bash(cp:*)",
      "Bash(npm run lint)",
      "Bash(npm run format:*)"
    ],
    "deny": []
  }
}
